{"ast":null,"code":"var _jsxFileName = \"/Users/hichamghazi/Desktop/esc-cappelle/src/components/Shared/SimpleLineChart.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleLineChart = ({\n  data\n}) => {\n  if (!data || data.length === 0) return null;\n  const width = 600;\n  const height = 250;\n  const padding = 50;\n  const chartWidth = width - 2 * padding;\n  const chartHeight = height - 2 * padding;\n  const maxNote = 10;\n  const points = data.map((item, index) => {\n    const x = padding + index / Math.max(data.length - 1, 1) * chartWidth;\n    const y = height - padding - item.note / maxNote * chartHeight;\n    return {\n      x,\n      y,\n      note: item.note,\n      match: item.match\n    };\n  });\n  const pathData = points.map((p, i) => `${i === 0 ? 'M' : 'L'} ${p.x} ${p.y}`).join(' ');\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"100%\",\n    height: \"250\",\n    viewBox: `0 0 ${width} ${height}`,\n    style: {\n      maxWidth: '100%'\n    },\n    children: [[0, 2.5, 5, 7.5, 10].map(val => {\n      const y = height - padding - val / maxNote * chartHeight;\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: padding,\n          y1: y,\n          x2: width - padding,\n          y2: y,\n          stroke: \"#e5e7eb\",\n          strokeDasharray: \"3,3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: padding - 10,\n          y: y + 5,\n          textAnchor: \"end\",\n          fontSize: \"12\",\n          fill: \"#6b7280\",\n          children: val\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, val, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: pathData,\n      fill: \"none\",\n      stroke: \"#ff8800\",\n      strokeWidth: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), points.map((p, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: p.x,\n        cy: p.y,\n        r: \"5\",\n        fill: \"#ff8800\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: `${p.match}: ${p.note}/10`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: padding,\n      y1: height - padding,\n      x2: width - padding,\n      y2: height - padding,\n      stroke: \"#1f2937\",\n      strokeWidth: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: padding,\n      y1: padding,\n      x2: padding,\n      y2: height - padding,\n      stroke: \"#1f2937\",\n      strokeWidth: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = SimpleLineChart;\nexport default SimpleLineChart;\nvar _c;\n$RefreshReg$(_c, \"SimpleLineChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SimpleLineChart","data","length","width","height","padding","chartWidth","chartHeight","maxNote","points","map","item","index","x","Math","max","y","note","match","pathData","p","i","join","viewBox","style","maxWidth","children","val","x1","y1","x2","y2","stroke","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","textAnchor","fontSize","fill","d","strokeWidth","cx","cy","r","_c","$RefreshReg$"],"sources":["/Users/hichamghazi/Desktop/esc-cappelle/src/components/Shared/SimpleLineChart.jsx"],"sourcesContent":["import React from 'react';\n\nconst SimpleLineChart = ({ data }) => {\n  if (!data || data.length === 0) return null;\n\n  const width = 600;\n  const height = 250;\n  const padding = 50;\n  const chartWidth = width - 2 * padding;\n  const chartHeight = height - 2 * padding;\n\n  const maxNote = 10;\n  const points = data.map((item, index) => {\n    const x = padding + (index / Math.max(data.length - 1, 1)) * chartWidth;\n    const y = height - padding - (item.note / maxNote) * chartHeight;\n    return { x, y, note: item.note, match: item.match };\n  });\n\n  const pathData = points.map((p, i) => `${i === 0 ? 'M' : 'L'} ${p.x} ${p.y}`).join(' ');\n\n  return (\n    <svg width=\"100%\" height=\"250\" viewBox={`0 0 ${width} ${height}`} style={{maxWidth: '100%'}}>\n      {[0, 2.5, 5, 7.5, 10].map(val => {\n        const y = height - padding - (val / maxNote) * chartHeight;\n        return (\n          <g key={val}>\n            <line x1={padding} y1={y} x2={width - padding} y2={y} stroke=\"#e5e7eb\" strokeDasharray=\"3,3\" />\n            <text x={padding - 10} y={y + 5} textAnchor=\"end\" fontSize=\"12\" fill=\"#6b7280\">{val}</text>\n          </g>\n        );\n      })}\n\n      <path d={pathData} fill=\"none\" stroke=\"#ff8800\" strokeWidth=\"3\" />\n\n      {points.map((p, i) => (\n        <g key={i}>\n          <circle cx={p.x} cy={p.y} r=\"5\" fill=\"#ff8800\" />\n          <title>{`${p.match}: ${p.note}/10`}</title>\n        </g>\n      ))}\n\n      <line x1={padding} y1={height - padding} x2={width - padding} y2={height - padding} stroke=\"#1f2937\" strokeWidth=\"2\" />\n      <line x1={padding} y1={padding} x2={padding} y2={height - padding} stroke=\"#1f2937\" strokeWidth=\"2\" />\n    </svg>\n  );\n};\n\nexport default SimpleLineChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}