{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useMatchManagement = () => {\n  _s();\n  const [selectedMatch, setSelectedMatch] = useState(null);\n  const [showScoreModal, setShowScoreModal] = useState(false);\n  const [matchToPlay, setMatchToPlay] = useState(null);\n  const [scoreEquipeInput, setScoreEquipeInput] = useState('');\n  const [scoreAdversaireInput, setScoreAdversaireInput] = useState('');\n  const marquerCommeJoue = (matchId, matchs) => {\n    const match = matchs.find(m => m.id === matchId);\n    setMatchToPlay(match);\n    setScoreEquipeInput('');\n    setScoreAdversaireInput('');\n    setShowScoreModal(true);\n  };\n  const confirmerScoreEtJouer = (matchs, setMatchs, showNotification) => {\n    if (scoreEquipeInput === '' || scoreAdversaireInput === '') {\n      showNotification('Veuillez saisir les deux scores', 'error');\n      return;\n    }\n    const newMatchs = matchs.map(m => m.id === matchToPlay.id ? {\n      ...m,\n      statut: 'joue',\n      scoreEquipe: parseInt(scoreEquipeInput),\n      scoreAdversaire: parseInt(scoreAdversaireInput)\n    } : m);\n    setMatchs(newMatchs);\n    setShowScoreModal(false);\n    setMatchToPlay(null);\n  };\n  const repasserEnAttente = (matchId, matchs, setMatchs, notes) => {\n    const hasNotes = notes.some(n => n.id_match === matchId);\n    if (hasNotes) {\n      const confirmer = window.confirm('ATTENTION : Ce match a déjà des notes enregistrées. Si vous le repassez en attente, les notes ne seront pas supprimées mais le match redeviendra modifiable. Continuer ?');\n      if (!confirmer) return;\n    }\n    const newMatchs = matchs.map(m => m.id === matchId ? {\n      ...m,\n      statut: 'avenir',\n      scoreEquipe: 0,\n      scoreAdversaire: 0\n    } : m);\n    setMatchs(newMatchs);\n  };\n  return {\n    selectedMatch,\n    setSelectedMatch,\n    showScoreModal,\n    setShowScoreModal,\n    matchToPlay,\n    scoreEquipeInput,\n    setScoreEquipeInput,\n    scoreAdversaireInput,\n    setScoreAdversaireInput,\n    marquerCommeJoue,\n    confirmerScoreEtJouer,\n    repasserEnAttente\n  };\n};\n_s(useMatchManagement, \"Q533ElhaT7BJBKjOew8PKupqGJQ=\");\nexport default useMatchManagement;","map":{"version":3,"names":["useState","useMatchManagement","_s","selectedMatch","setSelectedMatch","showScoreModal","setShowScoreModal","matchToPlay","setMatchToPlay","scoreEquipeInput","setScoreEquipeInput","scoreAdversaireInput","setScoreAdversaireInput","marquerCommeJoue","matchId","matchs","match","find","m","id","confirmerScoreEtJouer","setMatchs","showNotification","newMatchs","map","statut","scoreEquipe","parseInt","scoreAdversaire","repasserEnAttente","notes","hasNotes","some","n","id_match","confirmer","window","confirm"],"sources":["/Users/hichamghazi/Desktop/esc-cappelle/src/hooks/useMatchManagement.js"],"sourcesContent":["import { useState } from 'react';\n\nconst useMatchManagement = () => {\n  const [selectedMatch, setSelectedMatch] = useState(null);\n  const [showScoreModal, setShowScoreModal] = useState(false);\n  const [matchToPlay, setMatchToPlay] = useState(null);\n  const [scoreEquipeInput, setScoreEquipeInput] = useState('');\n  const [scoreAdversaireInput, setScoreAdversaireInput] = useState('');\n\n  const marquerCommeJoue = (matchId, matchs) => {\n    const match = matchs.find(m => m.id === matchId);\n    setMatchToPlay(match);\n    setScoreEquipeInput('');\n    setScoreAdversaireInput('');\n    setShowScoreModal(true);\n  };\n\n  const confirmerScoreEtJouer = (matchs, setMatchs, showNotification) => {\n    if (scoreEquipeInput === '' || scoreAdversaireInput === '') {\n      showNotification('Veuillez saisir les deux scores', 'error');\n      return;\n    }\n\n    const newMatchs = matchs.map(m =>\n      m.id === matchToPlay.id\n        ? { ...m, statut: 'joue', scoreEquipe: parseInt(scoreEquipeInput), scoreAdversaire: parseInt(scoreAdversaireInput) }\n        : m\n    );\n    setMatchs(newMatchs);\n    setShowScoreModal(false);\n    setMatchToPlay(null);\n  };\n\n  const repasserEnAttente = (matchId, matchs, setMatchs, notes) => {\n    const hasNotes = notes.some(n => n.id_match === matchId);\n\n    if (hasNotes) {\n      const confirmer = window.confirm('ATTENTION : Ce match a déjà des notes enregistrées. Si vous le repassez en attente, les notes ne seront pas supprimées mais le match redeviendra modifiable. Continuer ?');\n      if (!confirmer) return;\n    }\n\n    const newMatchs = matchs.map(m =>\n      m.id === matchId\n        ? { ...m, statut: 'avenir', scoreEquipe: 0, scoreAdversaire: 0 }\n        : m\n    );\n    setMatchs(newMatchs);\n  };\n\n  return {\n    selectedMatch,\n    setSelectedMatch,\n    showScoreModal,\n    setShowScoreModal,\n    matchToPlay,\n    scoreEquipeInput,\n    setScoreEquipeInput,\n    scoreAdversaireInput,\n    setScoreAdversaireInput,\n    marquerCommeJoue,\n    confirmerScoreEtJouer,\n    repasserEnAttente\n  };\n};\n\nexport default useMatchManagement;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACK,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACW,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpE,MAAMa,gBAAgB,GAAGA,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC5C,MAAMC,KAAK,GAAGD,MAAM,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKL,OAAO,CAAC;IAChDN,cAAc,CAACQ,KAAK,CAAC;IACrBN,mBAAmB,CAAC,EAAE,CAAC;IACvBE,uBAAuB,CAAC,EAAE,CAAC;IAC3BN,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMc,qBAAqB,GAAGA,CAACL,MAAM,EAAEM,SAAS,EAAEC,gBAAgB,KAAK;IACrE,IAAIb,gBAAgB,KAAK,EAAE,IAAIE,oBAAoB,KAAK,EAAE,EAAE;MAC1DW,gBAAgB,CAAC,iCAAiC,EAAE,OAAO,CAAC;MAC5D;IACF;IAEA,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAG,CAACN,CAAC,IAC5BA,CAAC,CAACC,EAAE,KAAKZ,WAAW,CAACY,EAAE,GACnB;MAAE,GAAGD,CAAC;MAAEO,MAAM,EAAE,MAAM;MAAEC,WAAW,EAAEC,QAAQ,CAAClB,gBAAgB,CAAC;MAAEmB,eAAe,EAAED,QAAQ,CAAChB,oBAAoB;IAAE,CAAC,GAClHO,CACN,CAAC;IACDG,SAAS,CAACE,SAAS,CAAC;IACpBjB,iBAAiB,CAAC,KAAK,CAAC;IACxBE,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMqB,iBAAiB,GAAGA,CAACf,OAAO,EAAEC,MAAM,EAAEM,SAAS,EAAES,KAAK,KAAK;IAC/D,MAAMC,QAAQ,GAAGD,KAAK,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,KAAKpB,OAAO,CAAC;IAExD,IAAIiB,QAAQ,EAAE;MACZ,MAAMI,SAAS,GAAGC,MAAM,CAACC,OAAO,CAAC,0KAA0K,CAAC;MAC5M,IAAI,CAACF,SAAS,EAAE;IAClB;IAEA,MAAMZ,SAAS,GAAGR,MAAM,CAACS,GAAG,CAACN,CAAC,IAC5BA,CAAC,CAACC,EAAE,KAAKL,OAAO,GACZ;MAAE,GAAGI,CAAC;MAAEO,MAAM,EAAE,QAAQ;MAAEC,WAAW,EAAE,CAAC;MAAEE,eAAe,EAAE;IAAE,CAAC,GAC9DV,CACN,CAAC;IACDG,SAAS,CAACE,SAAS,CAAC;EACtB,CAAC;EAED,OAAO;IACLpB,aAAa;IACbC,gBAAgB;IAChBC,cAAc;IACdC,iBAAiB;IACjBC,WAAW;IACXE,gBAAgB;IAChBC,mBAAmB;IACnBC,oBAAoB;IACpBC,uBAAuB;IACvBC,gBAAgB;IAChBO,qBAAqB;IACrBS;EACF,CAAC;AACH,CAAC;AAAC3B,EAAA,CA7DID,kBAAkB;AA+DxB,eAAeA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}